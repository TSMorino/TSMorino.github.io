{"meta":{"title":"Morino","subtitle":"一个简单的博客","description":"一个简单的博客","author":"Morino","url":"https://blog.morino.top","root":"/"},"pages":[{"title":"","date":"2024-08-10T17:12:39.651Z","updated":"2024-08-10T17:12:39.651Z","comments":true,"path":"about/index.html","permalink":"https://blog.morino.top/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"所有分类","date":"2024-08-10T17:12:46.601Z","updated":"2024-08-10T17:12:46.601Z","comments":true,"path":"categories/index.html","permalink":"https://blog.morino.top/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2024-08-10T17:13:01.385Z","updated":"2024-08-10T17:13:01.385Z","comments":true,"path":"tags/index.html","permalink":"https://blog.morino.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2024-08-10T17:12:57.131Z","updated":"2024-08-10T17:12:57.131Z","comments":true,"path":"mylist/index.html","permalink":"https://blog.morino.top/mylist/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2024-08-10T17:12:51.621Z","updated":"2024-08-10T17:12:51.621Z","comments":true,"path":"friends/index.html","permalink":"https://blog.morino.top/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"}],"posts":[{"title":"搭建一个属于自己的图床","slug":"搭建一个属于自己的图床","date":"2024-11-05T12:20:29.000Z","updated":"2024-11-11T07:16:18.479Z","comments":true,"path":"2024/11/05/搭建一个属于自己的图床/","permalink":"https://blog.morino.top/2024/11/05/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/","excerpt":"","text":"一、购买阿里云或其他OSS资源因为我自己使用的是阿里云服务，所以下面使用的是阿里云OSS服务。登录阿里云账号，搜索框搜索 对象存储OSS 。 点击立即购买，选择适合自己的产品。 付款成功后进入控制台。 二、配置OSS1、创建Bucket在界面的右侧中间有Bucket管理选项，创建新的Bucket，取一个自己喜欢的名字。 2、获取AccessKey将鼠标放到右上角头像处，选择AccessKey。 创建子用户AccessKey。 点击创建用户后进入如下界面后设置登录名称，访问方式全选后保持默认就好。 确定后，子用户创立成功，记得保存AccessKey ID和AccessKey Secret，关闭页面后无法再次获取到这两个数据，后面还会用到。 点击用户登录名称，进入用户管理界面，增加权限 AliyunOSSFullAccess 和 AliyunOSSReadOnlyAccess 。 3、为Bucket增加授权回到Bucket管理界面，为其增加刚刚建立的子用户的授权。 三、配置PicGO下载[picgo安装包](Releases · Molunerfinn&#x2F;PicGo)。 安装好后进入如下界面，配置名可随意填写，KeyID和Key Secret就直接填AccessKey ID和AccessKey Secret，Bucket填写刚创建的Bucket的名称，存储区域在OSS地域和访问域名_对象存储(OSS)-阿里云帮助中心中查找自己所购的OSS服务的OSS专用地域ID。 配置好后，可以上传图片进行试验，如果报错可根据报错在网上寻找解决的方法。 四、配置Typora安装好Typora后打开设置界面，选择图像，当插入图片时上传图像，下面选择Picgo并指定Picgo的安装路径。 配置完成后点击验证图片上传选项，出现如下界面则代表成功绑定。 PS如果想将图片放在博客中使用或以其他方式供其他人访问，则需关闭阻止公共访问，并设置成公共可读。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"工具","slug":"技术分享/工具","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"图床","slug":"图床","permalink":"https://blog.morino.top/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"基于frp的内网穿透","slug":"基于frp的内网穿透","date":"2024-11-05T11:48:40.000Z","updated":"2024-11-11T07:08:33.032Z","comments":true,"path":"2024/11/05/基于frp的内网穿透/","permalink":"https://blog.morino.top/2024/11/05/%E5%9F%BA%E4%BA%8Efrp%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/","excerpt":"","text":"想要搭建自己的网站，如何供外人访问是一个难题。在IPV4大量使用的今天，大部分普通用户都无法直接获取可用的公网IP，所以无法从外网直接访问本地的内容。所以我们可以通过购买中转服务器，利用网络穿透来实现在外网访问本地设备。 前置准备： 一台具有公网IP的服务器 推荐阿里云的轻量应用服务器，亚太新加坡地区docker镜像，一月有1TB流量，只需24元，且绑定域名后无需备案。 基于Docker的FRP内网穿透部署: 搭建服务器: 创建frps.ini配置文件： 1234COPY# 创建存放目录sudo mkdir /etc/frp# 创建frps.ini文件vim /etc/frp/frps.ini 编辑frps.ini，内容如下： 1234567891011121314COPY[common]# 监听端口bind_port = 7000# 面板端口dashboard_port = 7500# 登录面板账号设置dashboard_user = [admin] # 自己设定dashboard_pwd = [password_1] # 自己设定# 设置http及https协议下代理端口（非重要）vhost_http_port = 7080vhost_https_port = 7081# 身份验证码token = [password_2] # 自己设定 运行下述命令，服务器端成功运行： 1COPYdocker run --restart=always --network host -d -v /etc/frp/frps.ini:/etc/frp/frps.ini --name frps snowdreamtech/frps 此时服务器端搭建完成，你可以通过服务器的公网IP加上7500端口就可以访问到frp的可视化界面。 搭建客户端 下载frp客户端：Github releases页面，下载windows版，注意不是darwin版，最新版可能会没有，请下载往期版本 编辑frpc.ini文件： 1234567891011121314151617COPY[common]server_addr = [你的服务器的公网IP]server_port = 7000token = [password_2] #刚设置的身份验证码[ssh]type = tcplocal_ip = 127.0.0.1local_port = 7249 #本地需要映射的端口号remote_port = 7249 #服务器上开放的端口号#想要添加端口直接再按该格式添加#[ssh]#type = tcp#local_ip = 127.0.0.1#local_port = 8096 #本地需要映射的端口号#remote_port = 8096 #服务器上开放的端口号 进入cmd命令行窗口，运行该命令： 1COPYfrpc.exe -c frpc.ini 访问[你的公网IP]:7050的frp界面的Proxies&#x2F;TCP板块，显示online则为成功，到这里整个流程就结束了。 如果有什么问题，欢迎在评论区交流，也可以给我发邮件。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"网络","slug":"技术分享/网络","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E7%BD%91%E7%BB%9C/"}],"tags":[{"name":"FRP","slug":"FRP","permalink":"https://blog.morino.top/tags/FRP/"}],"author":"morino"},{"title":"如何搭建一个博客网站","slug":"如何搭建一个博客网站","date":"2024-11-05T11:48:16.000Z","updated":"2024-11-11T07:16:23.229Z","comments":true,"path":"2024/11/05/如何搭建一个博客网站/","permalink":"https://blog.morino.top/2024/11/05/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/","excerpt":"","text":"一、前置准备1、安装NPM包管理工具NPM 全称 Node Package Manager，它是 JavaScript 的包管理工具, 并且是 Node.js平台的默认包管理工具。新版的Node.js已经集成了NPM工具，所以我们只需要下载Node.js就好。 1）通过Node.js官网下载安装进入官网后，我们可以看到两个版本的安装包，推荐下载LTS长期支持版本。下载完成后打开pkg文件，一路同意即可。 2）通过Homebrew安装（Mac用户可以使用）1COPYbrew install node 等待一段时间后，Node.js就安装完毕了，如果下载速度较慢可以考虑进行换源。 安装完成后，可以通过 node -v 查看Node.js的版本，或用 npm -v 查看NPM工具的版本。 2、安装Hexo工具Hexo 是一个快速、简洁且高效的博客框架。Hexo 能够使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 安装Hexo和Hex服务器模块 12COPYnpm install -g hexo-clinpm install hexo-server --save 3、准备博客主题网上有大量的Hexo主题相关的帖子，你也可以在Hexo官方的主题社区，可以凭自己的爱好选择合适的主题。我选择的是Volantis ，是一个功能丰富、高度模块化的 Hexo 博客主题。接下来的内容也都将围绕这个主题展开。 二、本地部署1、安装主题1）、初始化博客在你想要创建博客的文件目录下进入终端，运行以下命令，会生成一个Blog文件夹，里面是博客的基本配置。 1COPYhexo init Blog 2）、安装主题a）常规流程当你创建好了初始化博客之后，博客会是Hexo的默认主题，接下来替换为你预先选好的主题即可。打开Blog文件夹下的_config.yml文件，找到theme: landscape这一项，然后将其替换为以下内容后保存退出。 1COPYtheme: volantis 然后打开终端运行以下命令 1COPYnpm i hexo-theme-volantis b) 快捷命令（Mac用户可以使用）1COPYcurl -s https://volantis.js.org/start | bash 这行命令将会自动检测并安装所需环境，初始化博客，然后下载安装并应用主题。 3）检验是否成功在本地运行部署博客，观察是否可以访问。 12COPYhexo g #生成网页hexo s #本地运行Hexo服务 运行结束后，切勿关闭终端。访问 http://localhost:4000/ 观察主题是否被成功应用，如果未成功，请检查上面的步骤是否有缺失，或者在评论区留言，或者通过邮箱联系我。 2、创建博文1）创建新博文执行以下命令 1COPYhexo n post [文章标题] 会自动在source&#x2F;_post文件夹下生成一个对应的md文件（如果想要修改默认生成的文章格式，可以修改scaffolds&#x2F;post.md文件）。 2）发布网页12COPYhexo g #生成网页hexo s #本地运行Hexo服务 运行成功后。访问 http://localhost:4000/ ，新写的md文件会自动生成博客文章显示在主页。 三、部署至Github Page1、安装Git安装版本管理工具Git，用于将代码上传到Github仓库中。 2、新建仓库在GitHub中新建一个名为 [用户名].github.io 的公开仓库。 3、绑定Git与Github1）打开Git bash，执行如下命令12COPYgit config --global user.name &quot;这里换上你的用户名&quot;git config --global user.email &quot;这里换上你的邮箱&quot; 2）执行以下命令生成密钥1COPYssh-keygen -t rsa -C &quot;这里换上你的邮箱&quot; 进行3次或4次确认后，到C盘用户目录下找到.ssh文件夹，有一个命名为 id_rsa.pub 的文件，用文本编辑器打开后复制下来。 3）配置GitHub Settins打开Github，进入Settings配置界面，选择SSh and GPG keys项，创建 New SSH key，将刚才复制的内容粘贴到key输入框中，Title随便起一个容易分辨的名字就可以了。 4、修改_config.yml文件修改博客文件夹下，名为_config.yml的文件，如果没有该文件，则可以自行创建。 找到deploy模块，对其进行如下修改 1234COPYdeploy: type: git repo: git@github.com:[用户名]/[仓库名] branch: main # 分支的名字，可根据实际情况进行修改 5、上传网页文件到Github仓库中下载上传过程中所需要的插件hexo-deployer-git 1COPYnpm install hexo-deployer-git --save 运行如下命令，将网页上传到仓库中： 12COPYhexo g # 生成网页hexo d # 将网页文件上传到仓库中 到这里，整个流程就结束了，如果整个过程都没有问题的话，我们就可以通过网址 [用户名].github.io 访问自己的个人博客了。","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"博客","slug":"技术分享/博客","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://blog.morino.top/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-05-07T11:48:16.000Z","updated":"2024-11-11T07:16:25.179Z","comments":true,"path":"2023/05/07/hello-world/","permalink":"https://blog.morino.top/2023/05/07/hello-world/","excerpt":"","text":"这是这个博客的第一篇帖子，本来想写一下建站的过程，但是其实也就只是套了一下模板，自己原创的内容其实不多，所以还是算了。以后等有时间了，可能会专门写一篇文章来分享这个过程。最开始创建这个博客可能只是为了以后简历上能够多写一点东西，但是创建的过程还挺有意思的，第一次自己公布网站，然后还专门买了域名，其实还挺有成就感的，现阶段还挂载在Github上，以后有机会的话，说不定可以试试自己搭建服务器，或者部署在云服务器上，不过这都是后话了，先把现在要做的事情做好吧，手头上还欠了好几个实验报告呢。 如果你对我或者我的贴子感兴趣的话，不妨收藏这个网页，抑或是关注我的Github账号，RSS还在日程上，过一段时间应该就可以正常使用了。(已经可以使用了，请点击侧边栏名字下的RSS按钮，就可以看到啦)","categories":[{"name":"随笔","slug":"随笔","permalink":"https://blog.morino.top/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://blog.morino.top/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"工具","slug":"技术分享/工具","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%B7%A5%E5%85%B7/"},{"name":"网络","slug":"技术分享/网络","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E7%BD%91%E7%BB%9C/"},{"name":"博客","slug":"技术分享/博客","permalink":"https://blog.morino.top/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/%E5%8D%9A%E5%AE%A2/"},{"name":"随笔","slug":"随笔","permalink":"https://blog.morino.top/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"图床","slug":"图床","permalink":"https://blog.morino.top/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"FRP","slug":"FRP","permalink":"https://blog.morino.top/tags/FRP/"},{"name":"博客","slug":"博客","permalink":"https://blog.morino.top/tags/%E5%8D%9A%E5%AE%A2/"}]}